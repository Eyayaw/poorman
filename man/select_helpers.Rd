% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_helpers.R
\name{select_helpers}
\alias{select_helpers}
\alias{starts_with}
\alias{ends_with}
\alias{contains}
\alias{matches}
\alias{everything}
\alias{last_col}
\title{Select Helpers}
\usage{
starts_with(
  match,
  ignore.case = TRUE,
  vars = colnames(get(".data", envir = parent.frame()))
)

ends_with(
  match,
  ignore.case = TRUE,
  vars = colnames(get(".data", envir = parent.frame()))
)

contains(
  match,
  ignore.case = TRUE,
  vars = colnames(get(".data", envir = parent.frame()))
)

matches(
  match,
  ignore.case = TRUE,
  perl = FALSE,
  vars = colnames(get(".data", envir = parent.frame()))
)

everything(vars = colnames(get(".data", envir = parent.frame())))

last_col(offset = 0L, vars = colnames(get(".data", envir = parent.frame())))
}
\arguments{
\item{match}{\code{character(n)}. If length > 1, the union of the matches is taken.}

\item{ignore.case}{\code{logical(1)}. If \code{TRUE}, the default, ignores case when matching names.}

\item{vars}{\code{character(n)}. A character vector of variable names. When called from inside selecting functions such as
\code{select()}, these are automatically set to the names of the table.}

\item{perl}{\code{logical(1)}. Should Perl-compatible regexps be used?}

\item{offset}{\code{integer(1)}. Select the \code{n}th variable from the end of the \code{data.frame}.}
}
\value{
An integer vector giving the position of the matched variables.
}
\description{
These functions allow you to select variables based on their names.
\itemize{
\item \code{starts_with()}: Starts with a prefix.
\item \code{ends_with()}: Ends with a prefix.
\item \code{contains()}: Contains a literal string.
\item \code{matches()}: Matches a regular expression.
\item \code{everything()}: Matches all variables.
\item \code{last_col()}: Select the last variable, possibly with an offset.
}
}
\examples{
mtcars \%>\% select(starts_with("c"))
mtcars \%>\% select(starts_with(c("c", "h")))
mtcars \%>\% select(ends_with("b"))
mtcars \%>\% relocate(contains("a"), .before = mpg)
iris \%>\% select(matches(".t."))
mtcars \%>\% select(last_col())

}
